# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle
name: Build & Publish JPackage

on:
  # 自动触发：当推送符合 v* 格式的标签时
  push:
    tags: ['v*']
  
  # 手动触发：允许从 GitHub 界面直接运行
  workflow_dispatch:
    inputs:
      os:  # 用户手动选择目标操作系统
        description: 'Target OS for packaging'
        required: true
        default: 'macos-latest'
        type: choice
        options: 
          - ubuntu-latest
          - macos-latest
      version:  # 用户手动输入版本号（可选）
        description: 'Version number for the package'
        required: false
        default: '2.0.0'
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # 默认支持多平台

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 如果是手动触发，使用用户输入的版本号
      - name: Set Version (Manual Trigger)
        if: github.event_name == 'workflow_dispatch'  # 仅在手动触发时生效
        run: echo "version=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Build with Gradle
        run: |
          if [ -n "$version" ]; then
            ./gradlew clean jpackage -Pversion="$version"  # 传递版本号给 Gradle
          else
            ./gradlew clean jpackage
          fi

      - name: Upload Package to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jpackage-build-${{ matrix.os }}
          path: ./build/jpackage/*.dmg

      - name: Upload Release
        if: github.event_name != 'workflow_dispatch'  # 仅在自动触发时上传 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/jpackage/myapp.dmg
          asset_name: myapp-${{ github.ref_name }}.dmg
