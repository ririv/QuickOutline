# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Build & Publish JPackage

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      os:
        description: 'Target OS for packaging'
        required: true
        default: 'macos-latest'
        type: choice
        options: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
      version:
        description: 'Version number for the package'
        required: false
        default: '2.0.0'
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 版本号设置逻辑
      - name: Set Version from Tag (Auto)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Set Version from Input (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: echo "version=${{ inputs.version }}" >> $GITHUB_ENV

      # Ubuntu 依赖安装
      - name: Install Ubuntu Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-0 \
            libxtst6 \
            libx11-xcb1 \
            libasound2 \
            libfontconfig1 \
            libfreetype6

      # Windows 依赖安装（需要管理员权限）
      - name: Install Windows Dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install wiix64
          # 或者手动安装需要的Visual C++运行时库

      # 构建步骤
      - name: Build with Gradle
        run: ./gradlew clean jpackage -Pversion="$version"

      # 确定包扩展名
      - name: Determine Package Extension
        id: extension
        run: |
          case "$RUNNER_OS" in
            Linux)
              echo "EXTENSION=deb" >> $GITHUB_ENV
              ;;
            Windows)
              echo "EXTENSION=msi" >> $GITHUB_ENV
              ;;
            Darwin)
              echo "EXTENSION=dmg" >> $GITHUB_ENV
              ;;
          esac

      # 上传构建产物
      - name: Upload Package to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jpackage-build-${{ matrix.os }}
          path: ./build/jpackage/*.${{ env.EXTENSION }}

      # 自动发布Release
      - name: Upload Release
        if: github.event_name != 'workflow_dispatch'  # 仅在自动触发时上传 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/jpackage/*.${{ env.EXTENSION }}
          asset_name: myapp-${{ github.ref_name }}.${{ env.EXTENSION }}
